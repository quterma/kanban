{"version":3,"sources":["images/ava.svg","images/arrow.svg","Components/Shared/Button.jsx","utils/outsideDetector.js","Components/Shared/DropdownMenu.jsx","Components/Shared/UserMenu.jsx","redux/kanbanSlice.js","utils/useWindowSize.js","Components/Header/Header.jsx","utils/reorder.js","Components/Main/Column/Task.jsx","Components/Main/Column/ColumnInnerList.jsx","Components/Main/Column/ColumnHeader.jsx","Components/Main/Column/ColumnFooter.jsx","Components/Main/Column/Column.jsx","Components/Main/MainInnerList.jsx","Components/Main/Column/ColumnMap.jsx","Components/Main/Main.jsx","Components/Main/MainDragDropContext.jsx","Components/Footer/Footer.jsx","styles/px2vw.js","styles/global.js","Components/Editor/Step.jsx","Components/Editor/StepContainer.jsx","Components/Editor/StepsInnerList.jsx","Components/Editor/Editor.jsx","Components/Editor/EditorContainer.jsx","App.js","redux/store.js","utils/localStorage.js","index.js"],"names":["module","exports","AddItem","styled","button","props","light","disabled","dark","top","Icon","i","Button","onHandleClick","name","clear","onClick","className","OutsideDetector","ref","onHandleOutsideClicks","wrapperRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","Container","ul","right","Unit","li","DropdownMenu","onSubmit","onHandleLeave","mappingData","currentTarget","InnerList","map","el","key","id","content","onMouseLeave","Wrapper","div","Frame","Avatar","img","Arrow","open","UserMenu","useState","isDropdown","setIsDropdown","hideDropdown","src","ava","alt","arrow","data","console","log","kanbanSlice","createSlice","initialState","steps","tasks","columns","title","taskIds","columnOrder","reducers","setHomeIndex","state","action","homeIndex","payload","setColumnOrder","createColumn","v4","splice","setColumn","Object","keys","value","values","deleteColumn","columnId","indexOf","forEach","task","push","setColumnTitle","newTitle","createTask","created","firstColumnId","deleteTask","taskId","taskIndex","findIndex","setTaskTitle","createStep","isCompleted","updateStep","deleteStep","stepId","actions","selectHomeIndex","kanban","selectColumnOrder","selectColumns","selectTasks","selectSteps","useWindowSize","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","header","width","Title","h2","Right","SmallContainer","withRouter","isEditor","useLocation","pathname","startsWith","dispatch","useDispatch","reorder","sourceIndex","destinationIndex","movedElementId","start","finish","newStart","newFinish","isDragging","Input","input","h3","Task","index","editMode","setEditMode","setNewTitle","onHandleChange","e","updateTaskTitle","history","useHistory","handleDoubleClick","draggableId","provided","snapshot","draggableProps","dragHandleProps","innerRef","autoFocus","onBlur","onChange","onDoubleClick","ColumnInnerList","RelativeContainer","ColumnHeader","thisColId","activateEditMode","substring","ColumnFooter","thisColumn","prevColumn","useSelector","isPreviousEmpty","length","isDisabled","setIsDisabled","showButton","startTasksIds","finishTaskIds","Date","toISOString","split","replace","TaskList","isDraggingOver","ColumnHeaderContainer","Column","column","isDropDisabled","droppableId","type","droppableProps","placeholder","MainInnerList","taskMap","ColumnMap","main","isOverflow","Main","setIsOverflow","getBoundingClientRect","scrollWidth","isEmpty","setIsEmpty","direction","MainDragDropContext","onDragStart","useCallback","source","onDragEnd","result","destination","droppableIs","newTaskIds","newColumnOrder","footer","InfoWrapper","Info","date","Footer","activeCount","finishedCount","px2vw","Global","createGlobalStyle","InputsWrapper","CheckboxContainer","InputContainer","CheckBox","Content","p","Step","onHandleToggle","updateThisStep","deleteThisStep","newContent","checked","StepContainer","step","setNewContent","StepsInnerList","stepIds","Component","Header","TitleWrapper","Created","h4","ButtonsWrapper","Editarea","Editor","onInputHandleChange","createNewStep","deleteThisTask","closeEditPage","withThisTaskRedirectHOC","params","useParams","to","path","render","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","configureStore","reducer","kanbanReducer","preloadedState","subscribe","throttle","stringify","setItem","error","saveState","getState","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96ec1625.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ava.9eadc42b.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.82509b24.svg\";","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\n// styling\r\nconst AddItem = styled.button`\r\n  background-color: inherit;\r\n  border-radius: 5px;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 1.2rem;\r\n  transition: 0.2s ease;\r\n  color: ${props => props.light ? '#FFFFFF' : '#5E6C84'};\r\n  padding: 6px;\r\n  &:hover {\r\n    background-color: ${props => props.disabled ? 'inherit' : props.dark ? '#EBECF0' : '#FFFFFF'};\r\n    cursor: ${props => props.disabled ? 'inherit' : 'pointer'};\r\n    color: #5E6C84;\r\n  };\r\n  margin: 7px 11px;\r\n  margin-top: ${props => props.top && props.top};\r\n`;\r\nconst Icon = styled.i`\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst Button = ({ onHandleClick, disabled, name, light, clear, top, dark }) => {\r\n  return (\r\n    <AddItem onClick={onHandleClick} disabled={disabled} light={light} top={top} dark={dark}>\r\n      {!clear && <Icon className=\"fas fa-plus\" light={light} ></Icon>}\r\n      {name}\r\n    </AddItem>\r\n  )\r\n}\r\n\r\nexport default Button","import React, { useRef, useEffect } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\n// Hook that call onHandleOutsideClicks outside of the passed ref\r\nfunction useOutsideDetector(ref, onHandleOutsideClicks) {\r\n\tuseEffect(() => {\r\n\t\t//use onHandleOutsideClicks if clicked on outside of element\r\n\t\tfunction handleClickOutside(event) {\r\n\t\t\tif (ref.current && !ref.current.contains(event.target)) {\r\n\t\t\t\tonHandleOutsideClicks();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Bind the event listener\r\n\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\r\n\t\treturn () => {\r\n\t\t\t// Unbind the event listener on clean up\r\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\r\n\t\t};\r\n\t}, [ref, onHandleOutsideClicks]);\r\n}\r\n\r\n//Component that alerts if you click outside of it\r\nfunction OutsideDetector(props) {\r\n\tconst wrapperRef = useRef(null);\r\n\tuseOutsideDetector(wrapperRef, props.onHandleOutsideClicks);\r\n\treturn <div ref={wrapperRef}>{props.children}</div>;\r\n}\r\n\r\n// OutsideDetector.propTypes = {\r\n// \tchildren: PropTypes.element.isRequired,\r\n// };\r\n\r\nexport default OutsideDetector;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport OutsideDetector from './../../utils/outsideDetector';\r\n\r\nconst Container = styled.ul`\r\n  position: absolute;\r\n  background-color: #FFFFFF;\r\n  min-width: 258px;\r\n  min-height: 70px;\r\n  max-height: 170px;\r\n  right: ${props => props.right};\r\n  transform: translateX(${props => props.right});\r\n  top: ${props => props.top};\r\n\r\n  border-radius: 5px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n  padding: 5px;\r\n  overflow-y: auto;\r\n`;\r\nconst Unit = styled.li`\r\n  text-align: left;\r\n  font-size: 1.2rem;\r\n  line-height: 1.4rem;\r\n  padding: 8px;\r\n  display: block;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n\r\n  &:hover { background-color: #DEDEDE }\r\n`;\r\n\r\nconst DropdownMenu = ({ onSubmit, onHandleLeave, mappingData, right, top }) => {\r\n\r\n  const onHandleClick = (event) => onSubmit(event.currentTarget);\r\n\r\n  const InnerList = mappingData.map(el => <Unit key={el.id} id={el.id} onClick={onHandleClick}>{el.content}</Unit>);\r\n  return (\r\n    <Container onMouseLeave={onHandleLeave} right={right} top={top}>\r\n      <OutsideDetector onHandleOutsideClicks={onHandleLeave}>\r\n        {InnerList}\r\n      </OutsideDetector>\r\n      </Container>\r\n  )\r\n}\r\n\r\nexport default DropdownMenu;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport ava from './../../images/ava.svg';\r\nimport arrow from './../../images/arrow.svg';\r\nimport DropdownMenu from './DropdownMenu';\r\n\r\nconst Wrapper = styled.div`\r\n  margin-left: 20px;\r\n  display: inline-block;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: 0.2s ease;\r\n  &:hover { opacity: 0.8 }\r\n`;\r\nconst Frame = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  border: 1px solid #FFFFFF;\r\n  background-color: #FFFFFF;\r\n  position: relative;\r\n`;\r\nconst Avatar = styled.img`\r\n  height: 33px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\nconst Arrow = styled.img`\r\n  height: 8px;\r\n  transform: ${props => (props.open ? 'matrix(1, 0, 0, -1, 0, 0)' : 'unset')};\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst UserMenu = () => {\r\n\r\n  // for switching button to dropdown menu\r\n  const [isDropdown, setIsDropdown] = useState(false);\r\n  const showDropdown = () => setIsDropdown(true);\r\n  const hideDropdown = () => setIsDropdown(false);\r\n\r\n  // ========================   Заглушки   ================\r\n  const dropDownItems = [{ id: 'profile', content: 'Profile' }, { id: 'logout', content: 'Log Out' }];\r\n  const onDropdownSubmit = data => {\r\n    console.log(`Hey! This is currently unavailable. You pressed \"${data.id}\" item. Good for you! :)`);\r\n    hideDropdown();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container onClick={showDropdown}>\r\n        <Frame>\r\n          <Avatar src={ava} alt='avatar'/>\r\n        </Frame>\r\n        <Arrow src={arrow} alt='arrow' open={isDropdown}/>\r\n      </Container>\r\n      {isDropdown && <DropdownMenu mappingData={dropDownItems} onSubmit={onDropdownSubmit} onHandleLeave={hideDropdown} right='1%' top='50px'/>}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default UserMenu\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { v4 } from \"node-uuid\";\r\n\r\nexport const kanbanSlice = createSlice({\r\n\tname: \"kanban\",\r\n\tinitialState: {\r\n\t\tsteps: {\r\n\t\t\t// 'stepId': {id: stepId (string), content: string, isCompleted: boolean}\r\n\t\t},\r\n\t\ttasks: {\r\n\t\t\t\"task-1\": { id: \"task-1\", content: \"One\", steps: [] },\r\n\t\t\t\"task-2\": { id: \"task-2\", content: \"Two\", steps: [] },\r\n\t\t\t\"task-3\": { id: \"task-3\", content: \"Three\", steps: [] },\r\n\t\t\t\"task-4\": { id: \"task-4\", content: \"Four\", steps: [] },\r\n\t\t},\r\n\t\tcolumns: {\r\n\t\t\t\"column-1\": {\r\n\t\t\t\tid: \"column-1\",\r\n\t\t\t\ttitle: \"Backlog\",\r\n\t\t\t\t// this property shows an affiliation to the column and an order in it\r\n\t\t\t\ttaskIds: [\"task-1\", \"task-2\", \"task-3\", \"task-4\"],\r\n\t\t\t},\r\n\t\t\t\"column-2\": {\r\n\t\t\t\tid: \"column-2\",\r\n\t\t\t\ttitle: \"Ready\",\r\n\t\t\t\t// this property shows an affiliation to the column and an order in it\r\n\t\t\t\ttaskIds: [],\r\n\t\t\t},\r\n\t\t\t\"column-3\": {\r\n\t\t\t\tid: \"column-3\",\r\n\t\t\t\ttitle: \"In Progress\",\r\n\t\t\t\t// this property shows an affiliation to the column and an order in it\r\n\t\t\t\ttaskIds: [],\r\n\t\t\t},\r\n\t\t\t\"column-4\": {\r\n\t\t\t\tid: \"column-4\",\r\n\t\t\t\ttitle: \"Finished\",\r\n\t\t\t\t// this property shows an affiliation to the column and an order in it\r\n\t\t\t\ttaskIds: [],\r\n\t\t\t},\r\n\t\t},\r\n\t\t// Facilitate reordering of the columns\r\n\t\tcolumnOrder: [\"column-1\", \"column-2\", \"column-3\", \"column-4\"],\r\n\t},\r\n\treducers: {\r\n\t\tsetHomeIndex: (state, action) => {\r\n\t\t\tstate.homeIndex = action.payload;\r\n\t\t},\r\n\t\tsetColumnOrder: (state, action) => {\r\n\t\t\tstate.columnOrder = action.payload;\r\n\t\t},\r\n\r\n\t\tcreateColumn: state => {\r\n\t\t\tconst id = v4();\r\n\t\t\tstate.columns[id] = { id, title: \"\", taskIds: [] };\r\n\t\t\tstate.columnOrder.splice(1, 0, id);\r\n\t\t},\r\n\t\tsetColumn: (state, action) => {\r\n\t\t\tconst id = Object.keys(action.payload)[0];\r\n\t\t\tconst value = Object.values(action.payload)[0];\r\n\t\t\tstate.columns[id].taskIds = value;\r\n\t\t},\r\n\t\tdeleteColumn: (state, action) => {\r\n\t\t\tconst columnId = action.payload;\r\n\t\t\tconst taskIds = state.columns[columnId].taskIds;\r\n\t\t\tif (state.columnOrder.indexOf(columnId) === 0) {\r\n\t\t\t\ttaskIds.forEach(task => delete state.tasks[task]);\r\n\t\t\t} else {\r\n\t\t\t\tstate.columns[columnId].taskIds.forEach(task => state.columns[state.columnOrder[0]].taskIds.push(task));\r\n\t\t\t}\r\n\t\t\tdelete state.columns[columnId];\r\n\t\t\tstate.columnOrder.splice(state.columnOrder.indexOf(columnId), 1);\r\n\t\t},\r\n\t\tsetColumnTitle: (state, action) => {\r\n\t\t\t// expected { columnId, newTitle }\r\n\t\t\tconst { columnId, newTitle } = action.payload;\r\n\t\t\tstate.columns[columnId].title = newTitle;\r\n\t\t},\r\n\r\n\t\tcreateTask: (state, action) => {\r\n\t\t\tconst created = action.payload;\r\n\t\t\tconst id = v4();\r\n\t\t\tstate.tasks[id] = { id, content: \"\", steps: [], created };\r\n\t\t\tconst firstColumnId = state.columnOrder[0];\r\n\t\t\tstate.columns[firstColumnId].taskIds.push(id);\r\n\t\t},\r\n\t\tdeleteTask: (state, action) => {\r\n\t\t\t// expected taskId\r\n\t\t\tconst taskId = action.payload;\r\n\t\t\tfor (let columnId in state.columns) {\r\n\t\t\t\tconst taskIndex = state.columns[columnId].taskIds.findIndex(el => el === taskId);\r\n\t\t\t\tif (taskIndex >= 0) state.columns[columnId].taskIds.splice(taskIndex, 1);\r\n\t\t\t}\r\n\t\t\tdelete state.tasks[taskId];\r\n\t\t},\r\n\t\tsetTaskTitle: (state, action) => {\r\n\t\t\t// expected { id, newTitle }\r\n\t\t\tconst { id, newTitle } = action.payload;\r\n\t\t\tstate.tasks[id].content = newTitle;\r\n\t\t},\r\n\r\n\t\tcreateStep: (state, action) => {\r\n\t\t\t// expected taskid - string\r\n\t\t\tconst taskId = action.payload;\r\n\t\t\tconst id = v4();\r\n\t\t\tstate.steps[id] = { id, content: \"\", isCompleted: false };\r\n\t\t\tstate.tasks[taskId].steps.push(id);\r\n\t\t},\r\n\t\tupdateStep: (state, action) => {\r\n\t\t\t// expected step - {id, content */or/* isCompleted}\r\n\t\t\tconst id = action.payload.id;\r\n\t\t\tstate.steps[id] = { ...state.steps[id], ...action.payload };\r\n\t\t},\r\n\t\tdeleteStep: (state, action) => {\r\n\t\t\t// expected { taskId, stepId }\r\n\t\t\tconst { taskId, stepId } = action.payload;\r\n\t\t\tstate.tasks[taskId].steps.splice(state.tasks[taskId].steps.indexOf(stepId), 1);\r\n\t\t\tdelete state.steps[stepId];\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const {\r\n\tsetHomeIndex,\r\n\tsetColumnOrder,\r\n\tsetColumn,\r\n\tcreateTask,\r\n\tcreateColumn,\r\n\tdeleteColumn,\r\n\tsetColumnTitle,\r\n\tsetTaskTitle,\r\n\tcreateStep,\r\n\tupdateStep,\r\n\tdeleteStep,\r\n\tdeleteTask,\r\n} = kanbanSlice.actions;\r\n\r\n// Selectors\r\nexport const selectHomeIndex = state => state.kanban.homeIndex && Object.values(state.kanban.homeIndex)[0];\r\nexport const selectColumnOrder = state => state.kanban.columnOrder;\r\nexport const selectColumns = state => state.kanban.columns;\r\nexport const selectTasks = state => state.kanban.tasks;\r\nexport const selectSteps = state => state.kanban.steps;\r\n\r\nexport default kanbanSlice.reducer;\r\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\nexport const useWindowSize = () => {\r\n\tconst [size, setSize] = useState([0, 0]);\r\n\tuseLayoutEffect(() => {\r\n\t\tconst updateSize = () => setSize([window.innerWidth, window.innerHeight]);\r\n\t\twindow.addEventListener(\"resize\", updateSize);\r\n\t\tupdateSize();\r\n\t\treturn () => window.removeEventListener(\"resize\", updateSize);\r\n\t}, []);\r\n\treturn size;\r\n};\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter, useLocation } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport Button from './../Shared/Button';\r\nimport UserMenu from './../Shared/UserMenu';\r\nimport { createColumn } from './../../redux/kanbanSlice';\r\nimport { useWindowSize } from '../../utils/useWindowSize';\r\n\r\nconst Container = styled.header`\r\n  background: #0067A3;\r\n  display: flex;\r\n  justify-content: ${props => props.width > 600 ? 'space-between' : 'flex-end'};\r\n  align-items: center;\r\n  padding: 5px 30px;\r\n`;\r\nconst Title = styled.h2`\r\n  font-size: 1.8rem;\r\n  color: #FFFFFF;\r\n`;\r\nconst Right = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst SmallContainer = styled.div`\r\n  background: #0079BF;\r\n  width: 100%;\r\n  display: block;\r\n  text-align: right;\r\n  padding: 10px 20px;\r\n`;\r\n\r\nfunction Header() {\r\n  const width = useWindowSize()[0];\r\n  \r\n  const isEditor = useLocation().pathname.startsWith('/editor');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createNewColumn = () => dispatch(createColumn());\r\n\r\n  if (width < 480) {\r\n    return (\r\n      <SmallContainer>\r\n        <UserMenu />\r\n      </SmallContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container width={width}>\r\n      {width > 600 && <Title>Awesome Kanban Board</Title>}\r\n      <Right>\r\n        {isEditor ||\r\n        <Button\r\n          onHandleClick={createNewColumn}\r\n          name='Create new list'\r\n          light\r\n        />\r\n        }\r\n        <UserMenu />\r\n      </Right>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","// this function reorder draggable ids in droppable containers\r\nexport const reorder = (sourceIndex, destinationIndex, movedElementId, start, finish) => {\r\n\t// 'splice out' movedElement with source index\r\n\tconst newStart = [...start];\r\n\tnewStart.splice(sourceIndex, 1);\r\n\t// 'splice in' movedElement on a 'place' with destination index\r\n\tconst newFinish = finish ? [...finish] : newStart;\r\n\tnewFinish.splice(destinationIndex, 0, movedElementId);\r\n\treturn [newStart, newFinish];\r\n};\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTaskTitle } from './../../../redux/kanbanSlice';\r\n\r\nconst Container = styled.div`\r\n  background: #FFFFFF;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  padding: 0 8px;\r\n  height: 2.5rem;\r\n  margin: 0 auto 15px auto;\r\n  background-color: ${props => props.isDragging ? '#9ae455' : 'white'};\r\n  outline: none;\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  line-height: 2.4rem;\r\n  font-size: 1.1rem;\r\n`;\r\nconst Title = styled.h3`\r\n  line-height: 2.5rem;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst Task = ({ task, index }) => {\r\n  const dispatch = useDispatch();\r\n  // editMode state for setting new column title\r\n  const [editMode, setEditMode] = useState(task.content === '');\r\n  // title state for title inpute onChange subscribe and setting value\r\n  const [newTitle, setNewTitle] = useState(task.content);\r\n  const onHandleChange = (e) => setNewTitle(e.currentTarget.value);\r\n  // get newTitle from local state and dispath in store\r\n  const updateTaskTitle = () => {\r\n    dispatch(setTaskTitle({ id: task.id, newTitle: newTitle ? newTitle : 'New Task' }));\r\n    setEditMode(false);\r\n  }\r\n\r\n  let history = useHistory();\r\n  const handleDoubleClick = () => history.push(`/editor/${task.id}`);\r\n\r\n  return (\r\n    // Draggable element\r\n    <Draggable draggableId={task.id} index={index} >\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n        >\r\n        { editMode ?\r\n          <Input\r\n            autoFocus onBlur={updateTaskTitle}\r\n            onChange={onHandleChange}\r\n            value={newTitle}\r\n            name={task.content}\r\n          />\r\n            : <Title onDoubleClick={handleDoubleClick}>{task.content}</Title>\r\n        }\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from \"./Task\";\r\n\r\n// moved out this mapping for avoiding redundant rendering\r\nconst ColumnInnerList = ({ tasks }) => tasks.map((task, index) => <Task key={task.id} task={task} index={index} />);\r\n\r\nexport default ColumnInnerList;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport DropdownMenu from './../../Shared/DropdownMenu';\r\nimport Button from './../../Shared/Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteColumn, setColumnTitle } from './../../../redux/kanbanSlice';\r\n\r\nconst Title = styled.h3`\r\n  padding: 12px;\r\n  font-size: 1.2rem;\r\n`;\r\nconst RelativeContainer = styled.div`\r\n  position: relative;\r\n`;\r\nconst Input = styled.input`\r\n  margin-left: 12px;\r\n  font-size: 1.2rem;\r\n  width: 160px;\r\n  line-height: 21px;\r\n  border: none;\r\n`;\r\n\r\nconst ColumnHeader = ({ title, thisColId }) => {\r\n  const dispatch = useDispatch();\r\n  // editMode state for setting new column title\r\n  const [editMode, setEditMode] = useState(title === '');\r\n  const activateEditMode = () => setEditMode(true);\r\n  // title state for title inpute onChange subscribe and setting value\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const onHandleChange = (e) => setNewTitle(e.currentTarget.value.substring(0, 18))\r\n  // get newTitle from local state and dispath in store\r\n  const updateColumnTitle = () => {\r\n    dispatch(setColumnTitle({ newTitle: newTitle ? newTitle : 'New Column', columnId: thisColId }));\r\n    setEditMode(false);\r\n  }\r\n  // data for dropdownMenu mapping\r\n  const mappingData = [{ id: 'delete column', content: 'Delete Column' }, { id: 'rename column', content: 'Rename column' }];\r\n  // state for toggling Button('...') | Dropdown('delete column', 'rename column')\r\n  const [isDropdown, setIsDropdown] = useState(false);\r\n  //get data from dropdownMenu and choose action\r\n  const execDropdownCommand = data => {\r\n    switch (data.id) {\r\n      case 'delete column':\r\n        dispatch(deleteColumn(thisColId));\r\n        setIsDropdown(false);\r\n        break;\r\n      case 'rename column':\r\n        activateEditMode();\r\n        setIsDropdown(false);\r\n        break;\r\n      default: return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {editMode ?\r\n        <Input autoFocus onBlur={updateColumnTitle} onChange={onHandleChange} value={newTitle} name={title}/>\r\n        : <Title onDoubleClick={activateEditMode}>{title}</Title>}\r\n      {isDropdown ?\r\n        <RelativeContainer>\r\n          <DropdownMenu\r\n            mappingData={mappingData}\r\n            onSubmit={execDropdownCommand}\r\n            onHandleLeave={() => setIsDropdown(false)}\r\n            right='-4%' top='15px' />\r\n        </RelativeContainer>\r\n        : <Button\r\n          onHandleClick={() => setIsDropdown(true)}\r\n          name={' ... '}\r\n          clear\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ColumnHeader\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport DropdownMenu from './../../Shared/DropdownMenu';\r\nimport Button from './../../Shared/Button';\r\nimport { reorder } from '../../../utils/reorder';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createTask, selectTasks, setColumn } from '../../../redux/kanbanSlice';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: 48px;\r\n`;\r\n\r\nconst ColumnFooter = ({ thisColumn, prevColumn, index }) => {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector(selectTasks);\r\n\r\n  // local state and for disabling add task button\r\n  const isPreviousEmpty = index > 0 && prevColumn.taskIds.length < 1;\r\n  const [isDisabled, setIsDisabled] = useState(isPreviousEmpty);\r\n  useEffect(() => { setIsDisabled(isPreviousEmpty) }, [isPreviousEmpty]);\r\n\r\n  // local state for toggling button/dropdown menu\r\n  const [isDropdown, setIsDropdown] = useState(false);\r\n  const showDropDown = () => setIsDropdown(true)\r\n  const showButton = () => setIsDropdown(false)\r\n\r\n  // create new task in first column\r\n  const createNewTask = () => {\r\n    const created = new Date().toISOString().split('.')[0].replace(/-/g, '.').replace(/t/gi, ' at ');\r\n    dispatch(createTask(created));\r\n  }\r\n\r\n  // add task from previous column\r\n  const addTask = data => {\r\n    const id = data.id;\r\n    const start = prevColumn;\r\n    const finish = thisColumn;\r\n    const sourceIndex = prevColumn.taskIds.indexOf(id)\r\n    const destinationIndex = thisColumn.taskIds.length;\r\n    const [startTasksIds, finishTaskIds] = reorder(sourceIndex, destinationIndex, id, start.taskIds, finish.taskIds);\r\n    dispatch(setColumn({ [start.id]: startTasksIds }));\r\n    dispatch(setColumn({ [finish.id]: finishTaskIds }));\r\n    showButton();\r\n  };\r\n\r\n  // mapping previous column tasks for dropdown menu\r\n  const mappingData = index > 0 && prevColumn.taskIds.map(taskId => tasks[taskId]);\r\n\r\n  return (\r\n    <Container>\r\n      { isDropdown ?\r\n        <DropdownMenu mappingData={mappingData} onSubmit={addTask} onHandleLeave={showButton} right='50%' top='-120px' />\r\n        : <Button\r\n          onHandleClick={index === 0 ? createNewTask : showDropDown}\r\n          disabled={isDisabled}\r\n          name={index === 0 ? 'Create new task' : 'Add task'}\r\n        />\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ColumnFooter;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport ColumnInnerList from './ColumnInnerList';\r\nimport ColumnHeader from './ColumnHeader';\r\nimport ColumnFooter from './ColumnFooter';\r\n\r\nconst Container = styled.div`\r\n  border: 1px solid lightgrey;\r\n  min-width: 282px;\r\n  max-height: 78vh;\r\n  background-color: #EBECF0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  text-align: left;\r\n  margin: 20px;\r\n`;\r\nconst TaskList = styled.div`\r\n  padding: 12px;\r\n  align-self: stretch;\r\n  flex-grow: 1;\r\n  min-height: 140px;\r\n  max-width: 280px;\r\n  transition: background-color 0.1s ease;\r\n  background-color: ${props => props.isDraggingOver ? '#add8e6c4' : 'inherit'};\r\n  overflow-y: auto;\r\n`;\r\nconst ColumnHeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 44px;\r\n  width: 100%;\r\n  outline: none;\r\n`;\r\n\r\nconst Column = ({ column, tasks, index, isDropDisabled, columns, columnOrder }) => {\r\n  const prevColumn = columns[columnOrder[index - 1]];\r\n  const thisColumn = columns[columnOrder[index]];\r\n\r\n  return (\r\n    <Draggable draggableId={column.id} index={index}>\r\n      {(provided) => (\r\n        <Container ref={provided.innerRef} {...provided.draggableProps}>\r\n          <ColumnHeaderContainer {...provided.dragHandleProps}>\r\n            <ColumnHeader title={column.title} thisColId={columnOrder[index]} />\r\n          </ColumnHeaderContainer>\r\n          <Droppable droppableId={column.id} isDropDisabled={isDropDisabled} type='task' top='100px'>\r\n            {(provided, snapshot) => (\r\n              <TaskList ref={provided.innerRef} {...provided.droppableProps} isDraggingOver={snapshot.isDraggingOver}>\r\n                <ColumnInnerList tasks={tasks} />\r\n                {provided.placeholder}\r\n              </TaskList>\r\n            )}\r\n          </Droppable>\r\n          <ColumnFooter thisColumn={thisColumn} prevColumn={prevColumn} index={index}/>\r\n        </Container>\r\n      )}\r\n      </Draggable>\r\n  )\r\n}\r\n\r\nexport default Column","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectTasks } from '../../redux/kanbanSlice';\r\nimport Column from \"./Column/Column\";\r\n\r\n// moved out this mapping for avoiding redundant rendering\r\nconst MainInnerList = ({ column, index, isDropDisabled, columns, columnOrder }) => {\r\n\tconst taskMap = useSelector(selectTasks);\r\n\t// map tasks inside a column\r\n\tconst tasks = column.taskIds.map(taskId => taskMap[taskId]);\r\n\treturn (\r\n\t\t<Column\r\n\t\t\tcolumn={column}\r\n\t\t\ttasks={tasks}\r\n\t\t\ttaskMap={taskMap}\r\n\t\t\tindex={index}\r\n\t\t\tisDropDisabled={isDropDisabled}\r\n\t\t\tcolumns={columns}\r\n\t\t\tcolumnOrder={columnOrder}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default MainInnerList\r\n","import React from 'react'\r\nimport MainInnerList from '../MainInnerList';\r\n\r\nconst ColumnMap = ({columnOrder, columns, homeIndex}) => {\r\n  return columnOrder.map((columnId, index) => {\r\n                const column = columns[columnId];\r\n                // condition disabling droppable if you move from right to left or try to move furtherer than to the next list\r\n                const isDropDisabled = index < homeIndex || index > homeIndex + 1;\r\n                return (\r\n                  <MainInnerList\r\n                    key={column.id}\r\n                    column={column}\r\n                    isDropDisabled={isDropDisabled}\r\n                    index={index}\r\n                    columns={columns}\r\n                    columnOrder={columnOrder}\r\n                  />\r\n                );\r\n              })\r\n}\r\n\r\nexport default ColumnMap;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { createColumn } from './../../redux/kanbanSlice';\r\nimport Button from './../Shared/Button';\r\nimport { useWindowSize } from \"./../../utils/useWindowSize\";\r\nimport ColumnMap from './Column/ColumnMap';\r\n\r\nconst Container = styled.main`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-wrap: ${props => props.width < 780 ? 'wrap' : 'nowrap'};\r\n  justify-content: ${props => props.isOverflow ? 'start' :'center'};\r\n  padding: 20px 0;\r\n`;\r\nconst Wrapper = styled.div`\r\n  overflow-x: auto;\r\n  background-color: #0079BF;\r\n  height: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Main = ({ columnOrder, columns, homeIndex }) => {\r\n  const width = useWindowSize()[0];\r\n\r\n  // check overflow for jc-center/start\r\n  const ref = useRef(null);\r\n  const [isOverflow, setIsOverflow] = useState(false);\r\n  useEffect(() => ref.current && setIsOverflow(ref.current.getBoundingClientRect().width < ref.current.scrollWidth),[width, columnOrder.length]);\r\n\r\n  const [isEmpty, setIsEmpty] = useState(columnOrder.length > 0);\r\n  useEffect(() => setIsEmpty(columnOrder.length > 0 ? false : true), [columnOrder]);\r\n\r\n  const dispatch = useDispatch();\r\n  // create new column (with index 1)\r\n  const createNewColumn = () => dispatch(createColumn());\r\n  \r\n  return (\r\n    // wrapper for droppable element ref={provided.innerRef}\r\n    <Wrapper ref={ref} >\r\n      {isEmpty ? <Button onHandleClick={createNewColumn} name='Create new list' light top={'40vh'}/> :\r\n        <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\r\n          {provided => (\r\n            <Container ref={provided.innerRef} {...provided.droppableProps} isOverflow={isOverflow} width={width}>\r\n              <ColumnMap columnOrder={columnOrder} columns={columns} homeIndex={homeIndex}/>\r\n              {provided.placeholder}\r\n            </Container>\r\n          )}\r\n        </Droppable>\r\n      }\r\n      </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","import React, { useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n\tsetHomeIndex,\r\n\tsetColumnOrder,\r\n\tsetColumn,\r\n\tselectHomeIndex,\r\n\tselectColumnOrder,\r\n\tselectColumns,\r\n} from \"./../../redux/kanbanSlice\";\r\nimport { reorder } from \"./../../utils/reorder\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport Main from \"./Main\";\r\n\r\n// Component with main drag-n-drop logic\r\nconst MainDragDropContext = () => {\r\n  const dispatch = useDispatch();\r\n\tconst columnOrder = useSelector(selectColumnOrder);\r\n\tconst columns = useSelector(selectColumns);\r\n\tconst homeIndex = useSelector(selectHomeIndex);\r\n\r\n\t// ===== A drag has started. DnD use this responder to block updates to all <Draggable /> and <Droppable /> components during a drag.\r\n\tconst onDragStart = useCallback(\r\n\t\tstart => {\r\n\t\t\t// Setting a start column index into state\r\n\t\t\tconst homeIndex = columnOrder.indexOf(start.source.droppableId);\r\n\t\t\tdispatch(setHomeIndex({ homeIndex }));\r\n\t\t},\r\n\t\t[columnOrder, dispatch]\r\n\t);\r\n\r\n\t// ===== A drag has ended. DnD use this responder to synchronously apply changes that has resulted from the drag.\r\n\tconst onDragEnd = useCallback(\r\n\t\tresult => {\r\n\t\t\t// Nullifying a start column index in state\r\n\t\t\tdispatch(setHomeIndex({ homeIndex: null }));\r\n\r\n\t\t\t// Destination: location (droppableId (column id or 'all-columns) and draggable element index) of where\r\n\t\t\t// the dragging item is now(after dragging). Could be null if the user is currently not dragging over any < Droppable />\r\n\t\t\t// Source: the location (droppableId and index) of where the dragging item has started within a <Droppable />.\r\n\t\t\t// DraggableId: draggable id\r\n\t\t\t// type of dragged element - 'task' or 'columns'\r\n\t\t\tconst { destination, source, draggableId, type } = result;\r\n\r\n\t\t\t// Check - if a Draggable has been moved to the previous position - return, else - move further\r\n\t\t\tif (!destination) return;\r\n\t\t\tif (destination.droppableId === source.droppableIs && destination.index === source.index) return;\r\n\r\n\t\t\t// =====  Columns moving logic starts here ======================================\r\n\t\t\tif (type === \"column\") {\r\n\t\t\t\t// Creating a new column order array\r\n\t\t\t\tconst newColumnOrder = reorder(source.index, destination.index, draggableId, columnOrder)[0];\r\n\t\t\t\t// Setting new columnOrder into state\r\n\t\t\t\tdispatch(setColumnOrder(newColumnOrder));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Source and destination droppable colums objects\r\n\t\t\tconst start = columns[source.droppableId];\r\n\t\t\tconst finish = columns[destination.droppableId];\r\n\r\n\t\t\t// =====  Tasks moving within same column logic starts here ======================================\r\n\t\t\tif (start === finish) {\r\n\t\t\t\t// Creating a new taskIds array\r\n\t\t\t\tconst newTaskIds = reorder(source.index, destination.index, draggableId, start.taskIds)[0];\r\n\t\t\t\t// dispatch column id and taskIds\r\n\t\t\t\tdispatch(setColumn({ [start.id]: newTaskIds }));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// =====  Tasks moving from one column to another logic starts here ======================================\r\n\t\t\t// Creating a new taskIds arrays\r\n\t\t\tconst [startTasksIds, finishTaskIds] = reorder(\r\n\t\t\t\tsource.index, destination.index,\r\n\t\t\t\tdraggableId,\r\n\t\t\t\tstart.taskIds,\r\n\t\t\t\tfinish.taskIds\r\n\t\t\t);\r\n\r\n\t\t\t// dispatch column id and taskIds\r\n\t\t\tdispatch(setColumn({ [start.id]: startTasksIds }));\r\n\t\t\tdispatch(setColumn({ [finish.id]: finishTaskIds }));\r\n\t\t},\r\n\t\t// dependencies\r\n\t\t[columnOrder, columns, dispatch]\r\n  );\r\n\r\n  return (\r\n\t\t\t// DragDropContext - context area for DnD actions\r\n\t\t\t<DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n\t\t\t\t<Main columnOrder={columnOrder} columns={columns} homeIndex={homeIndex} />\r\n\t\t\t</DragDropContext>\r\n  )\r\n}\r\n\r\nexport default MainDragDropContext;\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectColumnOrder,\tselectColumns } from \"./../../redux/kanbanSlice\";\r\nimport styled from 'styled-components';\r\nimport { useWindowSize } from './../../utils/useWindowSize';\r\n\r\n// styling\r\nconst Container = styled.footer`\r\n  height: 55px;\r\n  background: #0067A3;\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${props => props.width > 700 ? 'space-between' : 'center'};\r\n  max-width: 100%;\r\n`;\r\nconst InfoWrapper = styled.div`\r\n  padding: 5px;\r\n`;\r\nconst Info = styled.div`\r\n  font-size: 1.2rem;\r\n  display: inline-block;\r\n  color: #FFFFFF;\r\n  margin: 0 10px;\r\n  text-align: center;\r\n`;\r\n\r\n// заглушка =====\r\nconst userName = 'NAME'; \r\nconst date = new Date().toISOString().split('T')[0].replace(/-/g, '.');\r\n\r\nconst Footer = () => {\r\n  const width = useWindowSize()[0];\r\n\r\n  const columnOrder = useSelector(selectColumnOrder);\r\n  const columns = useSelector(selectColumns);\r\n  const activeCount = columnOrder.length === 0 ? 0 : columns[columnOrder[0]].taskIds.length;\r\n  const finishedCount = columnOrder.length === 0 ? 0 : columns[columnOrder[columnOrder.length - 1]].taskIds.length;\r\n\r\n  return (\r\n    <Container width={width}>\r\n      <InfoWrapper>\r\n        <Info>Active tasks:  {activeCount}</Info>\r\n        <Info>Finished tasks:  {finishedCount}</Info>\r\n      </InfoWrapper>\r\n      {width > 700 &&\r\n        <InfoWrapper>\r\n          <Info>Kanban board by:  {userName}</Info>\r\n          <Info>{date}</Info>\r\n        </InfoWrapper>\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","const px2vw = (size, width = 1440) => `${(size / width) * 100}vw`;\r\n\r\nexport default px2vw;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport px2vw from \"./px2vw\";\r\n\r\nconst Global = createGlobalStyle`\r\n*, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: 400;\r\n  \r\n  &::-webkit-scrollbar {\r\n    height: 9px;\r\n    width: 9px;\r\n    }\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 6px;\r\n    background-color: rgb(14, 43, 38, 0.4);\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 6px;\r\n    background-color: rgba(255, 254, 214, 0.6);\r\n  }\r\n}\r\n\r\n:root {\r\n    font-size: ${px2vw(48)};\r\n\r\n    @media (min-width: 400px) {\r\n      font-size: ${px2vw(40)};\r\n    }\r\n\r\n    @media (min-width: 500px) {\r\n      font-size: ${px2vw(34)};\r\n    }\r\n\r\n    @media (min-width: 600px) {\r\n      font-size: ${px2vw(28)};\r\n    }\r\n\r\n    @media (min-width: 700px) {\r\n      font-size: ${px2vw(24)};\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n      font-size: ${px2vw(22)};\r\n    }\r\n\r\n    @media (min-width: 900px) {\r\n      font-size: ${px2vw(20)};\r\n    }\r\n\r\n    @media (min-width: 1000px) {\r\n      font-size: ${px2vw(18)};\r\n    }\r\n\r\n    @media (min-width: 1200px) {\r\n      font-size: ${px2vw(16)};\r\n    }\r\n\r\n    @media (min-width: 1400px) {\r\n      font-size: ${px2vw(14)};\r\n    }\r\n\r\n    @media (min-width: 1600px) {\r\n      font-size: ${px2vw(12)};\r\n    }\r\n} \r\n\r\ninput {\r\n  outline: thin;\r\n}\r\n`;\r\n\r\nexport default Global;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './../Shared/Button';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 12px;\r\n  padding: 6px;\r\n`;\r\nconst InputsWrapper = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 2px;\r\n`;\r\nconst CheckboxContainer = styled.div`\r\n  min-height: 40px;\r\n`;\r\nconst InputContainer = styled.div`\r\n  min-height: 40px;\r\n  width: 100%;\r\n  padding-left: 10px;\r\n`;\r\nconst CheckBox = styled.input`\r\n  -ms-transform: scale(1.5); /* IE */\r\n  -moz-transform: scale(1.5); /* FF */\r\n  -webkit-transform: scale(1.5); /* Safari and Chrome */\r\n  -o-transform: scale(1.5); /* Opera */\r\n  transform: scale(1.5);\r\n  margin: 0;\r\n`;\r\nconst Content = styled.p`\r\n  font-size: 1.2rem;\r\n  line-height: 2rem;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-decoration: ${props => props.isCompleted && 'line-through #0000ffa9'};\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  flex: 1;\r\n  line-height: 2rem;\r\n  padding: 0;\r\n  font-size: 1.2rem;\r\n  border: none;\r\n  margin: 0;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst Step = ({ onHandleToggle, updateThisStep, onHandleChange, activateEditMode,\r\n  deleteThisStep, newContent, isCompleted, content, editMode }) => {\r\n\r\n  return (\r\n    <Container>\r\n      <InputsWrapper>\r\n        <CheckboxContainer>\r\n          <CheckBox type='checkbox' onChange={onHandleToggle} name='checkbox' checked={isCompleted}/>\r\n        </CheckboxContainer>\r\n        <InputContainer>\r\n          {editMode ?\r\n          <Input autoFocus onBlur={updateThisStep} onChange={onHandleChange} value={newContent} name='content' />\r\n          : <Content onDoubleClick={activateEditMode} isCompleted={isCompleted}>{content}</Content>\r\n          }\r\n        </InputContainer>\r\n      </InputsWrapper>\r\n      <Button onHandleClick={deleteThisStep} name='Delete step' clear dark/>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Step\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteStep, updateStep, selectSteps } from './../../redux/kanbanSlice';\r\nimport Step from './Step';\r\n\r\nconst StepContainer = ({ stepId, taskId }) => {\r\n  const dispatch = useDispatch();\r\n  const steps = useSelector(selectSteps);\r\n  const step = steps[stepId];\r\n  const content = step.content;\r\n  const isCompleted = step.isCompleted;\r\n\r\n  // local state for content div/input toggling\r\n  const [editMode, setEditMode] = useState(content === '');\r\n  const activateEditMode = () => setEditMode(true);\r\n\r\n  // local state for step.content\r\n  const [newContent, setNewContent] = useState(content);\r\n  const onHandleChange = (e) => setNewContent(e.currentTarget.value);\r\n  useEffect(() => setNewContent(content), [content]);\r\n\r\n  // change step.isCompleted and step.content property in store state\r\n  const onHandleToggle = () => dispatch(updateStep({ id: step.id, isCompleted: !isCompleted }));\r\n  const updateContent = () => {\r\n    dispatch(updateStep({ id: step.id, content: newContent ? newContent : 'new step' }));\r\n    setEditMode(false);\r\n  }\r\n  \r\n  const deleteThisStep = () => dispatch(deleteStep({ taskId, stepId }));\r\n\r\n  return (\r\n    <Step \r\n      onHandleToggle={onHandleToggle}\r\n      updateThisStep={updateContent}\r\n      onHandleChange={onHandleChange}\r\n      activateEditMode={activateEditMode}\r\n      deleteThisStep={deleteThisStep}\r\n      newContent={newContent}\r\n      isCompleted={isCompleted}\r\n      content={content}\r\n      editMode={editMode}\r\n    />\r\n  )\r\n}\r\n\r\nexport default StepContainer;\r\n","import React from 'react';\r\nimport StepContainer from './StepContainer';\r\n\r\n// moved out this mapping for avoiding redundant rendering\r\nconst StepsInnerList = ({ stepIds, taskId }) => stepIds.map(stepId => <StepContainer key={stepId} stepId={stepId} taskId={taskId} />);\r\n\r\nexport default StepsInnerList;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './../Shared/Button';\r\nimport StepsInnerList from './StepsInnerList';\r\n\r\n// styling\r\nconst Wrapper = styled.div`\r\n  background-color: #0079BF;\r\n  width: 100%;\r\n  min-width: 400px;\r\n  height: 100%;\r\n  min-height: 600px;\r\n  padding: 2%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst Container = styled.div`\r\n  border: 1px solid lightgrey;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #EBECF0;\r\n  border-radius: 10px;\r\n  text-align: left;\r\n`;\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 30px 5% 10px 5%;\r\n`;\r\nconst TitleWrapper = styled.div`\r\n  max-width: 50%;\r\n  height: 55px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 1.3rem;\r\n  height: 1.5rem;\r\n  font-weight: 700;\r\n  padding-left: 10px;\r\n`;\r\nconst Input = styled.input`\r\n  line-height: 1.4rem;\r\n  font-size: 1.3rem;\r\n  padding-left: 10px;\r\n  border: none;\r\n`;\r\nconst Created = styled.h4`\r\n  margin-top: 12px;\r\n  font-weight: 400;\r\n  font-size: 0.8rem;\r\n  padding-left: 10px;\r\n`;\r\nconst ButtonsWrapper = styled.div`\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  flex-wrap: wrap;\r\n  max-width: 40%;\r\n`;\r\nconst Editarea = styled.div`\r\n  width: 90%;\r\n  height: 75%;\r\n  margin: 20px auto;\r\n  padding: 20px 30px;\r\n  font-size: 22px;\r\n  display: block;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst Editor = ({ updateTaskTitle, onInputHandleChange, activateEditMode, createNewStep, deleteThisTask, closeEditPage,\r\n  editMode, created, newTitle, title, stepIds, taskId }) => {\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Header>\r\n          <TitleWrapper>\r\n            {editMode ?\r\n              <Input autoFocus onBlur={updateTaskTitle} onChange={onInputHandleChange} value={newTitle} name='title' />\r\n              : <Title onDoubleClick={activateEditMode}>{title}</Title>\r\n            }\r\n            {created && <Created>{created}</Created>}\r\n          </TitleWrapper>\r\n          <ButtonsWrapper>\r\n            <Button onHandleClick={createNewStep} name='Add step' clear />\r\n            <Button onHandleClick={deleteThisTask} name='Delete task' clear />\r\n            <Button onHandleClick={closeEditPage} name='Close edit' clear />\r\n          </ButtonsWrapper>\r\n        </Header>\r\n        <Editarea>\r\n          <StepsInnerList stepIds={stepIds} taskId={taskId} />\r\n        </Editarea>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Editor;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\r\nimport {createStep, selectTasks, setTaskTitle, deleteTask} from './../../redux/kanbanSlice'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Editor from './Editor';\r\n\r\n// redirect HOC checks if taskId in URL exists\r\nconst withThisTaskRedirectHOC = Component => {\r\n  const RedirectComponent = () => {\r\n    const params = useParams();\r\n    const tasks = useSelector(selectTasks);\r\n    const thisTask = tasks[params.taskId];\r\n    if (!thisTask) return <Redirect to=\"/\" />;\r\n    return <Component />;\r\n  }\r\n  return RedirectComponent;\r\n}\r\n\r\nconst EditorContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const tasks = useSelector(selectTasks);\r\n  const task = tasks[params.taskId];\r\n  const taskId = task.id;\r\n  const title = task.content;\r\n  const stepIds = task.steps;\r\n  const created = task.created;\r\n\r\n  let history = useHistory();\r\n  const closeEditPage = () => history.push('/');\r\n\r\n  // // local state for title div/input toggling\r\n  const [editMode, setEditMode] = useState(false);\r\n  const activateEditMode = () => setEditMode(true);\r\n\r\n  // local state for task.content (newTitle)\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const onInputHandleChange = (e) => setNewTitle(e.currentTarget.value);\r\n\r\n  // change task.content (title) property in store state\r\n  const updateTaskTitle = () => {\r\n    dispatch(setTaskTitle({ newTitle: newTitle ? newTitle : 'New Task', id: taskId }));\r\n    setEditMode(false);\r\n  }\r\n\r\n  const createNewStep = () => dispatch(createStep(taskId));\r\n  \r\n  const deleteThisTask = () => {\r\n    closeEditPage();\r\n    dispatch(deleteTask(taskId));\r\n  }\r\n\r\n  return (\r\n    <Editor\r\n      updateTaskTitle={updateTaskTitle}\r\n      onInputHandleChange={onInputHandleChange}\r\n      activateEditMode={activateEditMode}\r\n      createNewStep={createNewStep}\r\n      deleteThisTask={deleteThisTask}\r\n      closeEditPage={closeEditPage}\r\n      editMode={editMode}\r\n      created={created}\r\n      newTitle={newTitle}\r\n      title={title}\r\n      stepIds={stepIds}\r\n      taskId={taskId}\r\n    />\r\n  )\r\n}\r\n\r\nexport default withThisTaskRedirectHOC(withRouter(EditorContainer));\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport MainDragDropContext from \"./Components/Main/MainDragDropContext\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\nimport Global from \"./styles/global\";\r\nimport EditorContainer from \"./Components/Editor/EditorContainer\";\r\nimport { useWindowSize } from \"./utils/useWindowSize\";\r\n\r\nconst Wrapper = styled.div`\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst App = () => {\r\n\tconst width = useWindowSize()[0];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Global />\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/editor/:taskId?\" render={() => <EditorContainer />} />\r\n\t\t\t\t\t<Route path=\"/\" render={() => <MainDragDropContext />} />\r\n\t\t\t\t</Switch>\r\n\t\t\t\t{width > 480 && <Footer />}\r\n\t\t\t</Wrapper>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default withRouter(App);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport throttle from \"lodash/throttle\";\r\nimport kanbanReducer from \"./kanbanSlice\";\r\nimport { loadState, saveState } from \"./../utils/localStorage\";\r\n\r\n// get state from localStorage\r\nconst persistedState = loadState();\r\n\r\nexport const store = configureStore({\r\n\treducer: {\r\n\t\tkanban: kanbanReducer,\r\n\t},\r\n\tpreloadedState: persistedState,\r\n});\r\n\r\n// subscribes for setting state into localStorage\r\nstore.subscribe(\r\n\tthrottle(() => {\r\n\t\tsaveState(store.getState());\r\n\t}),\r\n\t1000\r\n);\r\n","// get state from localStorage\r\nexport const loadState = () => {\r\n\ttry {\r\n\t\tconst serializedState = localStorage.getItem(\"state\");\r\n\t\tif (serializedState === null) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\treturn JSON.parse(serializedState);\r\n\t} catch (err) {\r\n\t\treturn undefined;\r\n\t}\r\n};\r\n\r\n// set state in localStorage\r\nexport const saveState = state => {\r\n\ttry {\r\n\t\tconst serializedState = JSON.stringify(state);\r\n\t\tlocalStorage.setItem(\"state\", serializedState);\r\n\t} catch (error) {\r\n\t\t// console.log(error);\r\n\t}\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { store } from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"@atlaskit/css-reset\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<BrowserRouter>\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<App />\r\n\t\t\t</Provider>\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}